# generated by datamodel-codegen:
#   filename:  nvidia.com_dynamodeployments.yaml
#   timestamp: 2025-04-07T16:43:16+00:00

from __future__ import annotations

from typing import Any, Dict, List

from pydantic import BaseModel, Field


class Annotations(BaseModel):
    controller_gen_kubebuilder_io_version: str = Field(
        ..., alias='controller-gen.kubebuilder.io/version'
    )


class Metadata(BaseModel):
    annotations: Annotations
    name: str


class Names(BaseModel):
    kind: str
    listKind: str
    plural: str
    singular: str


class ApiVersion(BaseModel):
    type: str


class Kind(BaseModel):
    type: str


class Metadata1(BaseModel):
    type: str


class DynamoNim(BaseModel):
    type: str


class AdditionalProperties1(BaseModel):
    type: str


class Annotations1(BaseModel):
    additionalProperties: AdditionalProperties1
    type: str


class PeriodSeconds(BaseModel):
    format: str
    type: str


class Type(BaseModel):
    type: str


class Value(BaseModel):
    format: str
    type: str


class Properties7(BaseModel):
    periodSeconds: PeriodSeconds
    type: Type
    value: Value


class Items(BaseModel):
    properties: Properties7
    required: List[str]
    type: str


class Policies(BaseModel):
    items: Items
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class SelectPolicy(BaseModel):
    type: str


class StabilizationWindowSeconds(BaseModel):
    format: str
    type: str


class Properties6(BaseModel):
    policies: Policies
    selectPolicy: SelectPolicy
    stabilizationWindowSeconds: StabilizationWindowSeconds


class ScaleDown(BaseModel):
    properties: Properties6
    type: str


class Properties9(BaseModel):
    periodSeconds: PeriodSeconds
    type: Type
    value: Value


class Items1(BaseModel):
    properties: Properties9
    required: List[str]
    type: str


class Policies1(BaseModel):
    items: Items1
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties8(BaseModel):
    policies: Policies1
    selectPolicy: SelectPolicy
    stabilizationWindowSeconds: StabilizationWindowSeconds


class ScaleUp(BaseModel):
    properties: Properties8
    type: str


class Properties5(BaseModel):
    scaleDown: ScaleDown
    scaleUp: ScaleUp


class Behavior(BaseModel):
    properties: Properties5
    type: str


class Enabled(BaseModel):
    type: str


class MaxReplicas(BaseModel):
    type: str


class Container(BaseModel):
    type: str


class Name(BaseModel):
    type: str


class AverageUtilization(BaseModel):
    format: str
    type: str


class AnyOfItem(BaseModel):
    type: str


class AverageValue(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Value2(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties12(BaseModel):
    averageUtilization: AverageUtilization
    averageValue: AverageValue
    type: Type
    value: Value2


class Target(BaseModel):
    properties: Properties12
    required: List[str]
    type: str


class Properties11(BaseModel):
    container: Container
    name: Name
    target: Target


class ContainerResource(BaseModel):
    properties: Properties11
    required: List[str]
    type: str


class Key(BaseModel):
    type: str


class Operator(BaseModel):
    type: str


class Items4(BaseModel):
    type: str


class Values(BaseModel):
    items: Items4
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties16(BaseModel):
    key: Key
    operator: Operator
    values: Values


class Items3(BaseModel):
    properties: Properties16
    required: List[str]
    type: str


class MatchExpressions(BaseModel):
    items: Items3
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MatchLabels(BaseModel):
    additionalProperties: AdditionalProperties1
    type: str


class Properties15(BaseModel):
    matchExpressions: MatchExpressions
    matchLabels: MatchLabels


class Selector(BaseModel):
    properties: Properties15
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties14(BaseModel):
    name: Name
    selector: Selector


class Metric(BaseModel):
    properties: Properties14
    required: List[str]
    type: str


class AverageValue1(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Value3(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties17(BaseModel):
    averageUtilization: AverageUtilization
    averageValue: AverageValue1
    type: Type
    value: Value3


class Target1(BaseModel):
    properties: Properties17
    required: List[str]
    type: str


class Properties13(BaseModel):
    metric: Metric
    target: Target1


class External(BaseModel):
    properties: Properties13
    required: List[str]
    type: str


class Properties19(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    name: Name


class DescribedObject(BaseModel):
    properties: Properties19
    required: List[str]
    type: str


class Items6(BaseModel):
    type: str


class Values1(BaseModel):
    items: Items6
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties22(BaseModel):
    key: Key
    operator: Operator
    values: Values1


class Items5(BaseModel):
    properties: Properties22
    required: List[str]
    type: str


class MatchExpressions1(BaseModel):
    items: Items5
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MatchLabels1(BaseModel):
    additionalProperties: AdditionalProperties1
    type: str


class Properties21(BaseModel):
    matchExpressions: MatchExpressions1
    matchLabels: MatchLabels1


class Selector1(BaseModel):
    properties: Properties21
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties20(BaseModel):
    name: Name
    selector: Selector1


class Metric1(BaseModel):
    properties: Properties20
    required: List[str]
    type: str


class AverageValue2(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Value4(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties23(BaseModel):
    averageUtilization: AverageUtilization
    averageValue: AverageValue2
    type: Type
    value: Value4


class Target2(BaseModel):
    properties: Properties23
    required: List[str]
    type: str


class Properties18(BaseModel):
    describedObject: DescribedObject
    metric: Metric1
    target: Target2


class Object(BaseModel):
    properties: Properties18
    required: List[str]
    type: str


class Items8(BaseModel):
    type: str


class Values2(BaseModel):
    items: Items8
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties27(BaseModel):
    key: Key
    operator: Operator
    values: Values2


class Items7(BaseModel):
    properties: Properties27
    required: List[str]
    type: str


class MatchExpressions2(BaseModel):
    items: Items7
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MatchLabels2(BaseModel):
    additionalProperties: AdditionalProperties1
    type: str


class Properties26(BaseModel):
    matchExpressions: MatchExpressions2
    matchLabels: MatchLabels2


class Selector2(BaseModel):
    properties: Properties26
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties25(BaseModel):
    name: Name
    selector: Selector2


class Metric2(BaseModel):
    properties: Properties25
    required: List[str]
    type: str


class AverageValue3(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Value5(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties28(BaseModel):
    averageUtilization: AverageUtilization
    averageValue: AverageValue3
    type: Type
    value: Value5


class Target3(BaseModel):
    properties: Properties28
    required: List[str]
    type: str


class Properties24(BaseModel):
    metric: Metric2
    target: Target3


class Pods(BaseModel):
    properties: Properties24
    required: List[str]
    type: str


class AverageValue4(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Value6(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties30(BaseModel):
    averageUtilization: AverageUtilization
    averageValue: AverageValue4
    type: Type
    value: Value6


class Target4(BaseModel):
    properties: Properties30
    required: List[str]
    type: str


class Properties29(BaseModel):
    name: Name
    target: Target4


class Resource(BaseModel):
    properties: Properties29
    required: List[str]
    type: str


class Properties10(BaseModel):
    containerResource: ContainerResource
    external: External
    object: Object
    pods: Pods
    resource: Resource
    type: Type


class Items2(BaseModel):
    properties: Properties10
    required: List[str]
    type: str


class Metrics(BaseModel):
    items: Items2
    type: str


class MinReplicas(BaseModel):
    type: str


class Properties4(BaseModel):
    behavior: Behavior
    enabled: Enabled
    maxReplicas: MaxReplicas
    metrics: Metrics
    minReplicas: MinReplicas


class Autoscaling(BaseModel):
    properties: Properties4
    type: str


class DynamoTag(BaseModel):
    type: str


class EnvFromSecret(BaseModel):
    type: str


class Value7(BaseModel):
    type: str


class Name7(BaseModel):
    default: str
    type: str


class Optional(BaseModel):
    type: str


class Properties33(BaseModel):
    key: Key
    name: Name7
    optional: Optional


class ConfigMapKeyRef(BaseModel):
    properties: Properties33
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class FieldPath(BaseModel):
    type: str


class Properties34(BaseModel):
    apiVersion: ApiVersion
    fieldPath: FieldPath


class FieldRef(BaseModel):
    properties: Properties34
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class ContainerName(BaseModel):
    type: str


class Divisor(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Resource1(BaseModel):
    type: str


class Properties35(BaseModel):
    containerName: ContainerName
    divisor: Divisor
    resource: Resource1


class ResourceFieldRef(BaseModel):
    properties: Properties35
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties36(BaseModel):
    key: Key
    name: Name7
    optional: Optional


class SecretKeyRef(BaseModel):
    properties: Properties36
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties32(BaseModel):
    configMapKeyRef: ConfigMapKeyRef
    fieldRef: FieldRef
    resourceFieldRef: ResourceFieldRef
    secretKeyRef: SecretKeyRef


class ValueFrom(BaseModel):
    properties: Properties32
    type: str


class Properties31(BaseModel):
    name: Name
    value: Value7
    valueFrom: ValueFrom


class Items9(BaseModel):
    properties: Properties31
    required: List[str]
    type: str


class Envs(BaseModel):
    items: Items9
    type: str


class DeploymentSelectorKey(BaseModel):
    type: str


class DeploymentSelectorValue(BaseModel):
    type: str


class Properties37(BaseModel):
    deploymentSelectorKey: DeploymentSelectorKey
    deploymentSelectorValue: DeploymentSelectorValue


class AdditionalProperties5(BaseModel):
    properties: Properties37
    type: str


class ExternalServices(BaseModel):
    additionalProperties: AdditionalProperties5
    type: str


class AdditionalProperties6(BaseModel):
    type: str


class Annotations2(BaseModel):
    additionalProperties: AdditionalProperties6
    type: str


class Labels(BaseModel):
    additionalProperties: AdditionalProperties6
    type: str


class Properties38(BaseModel):
    annotations: Annotations2
    labels: Labels


class ExtraPodMetadata(BaseModel):
    properties: Properties38
    type: str


class Items12(BaseModel):
    type: str


class Values3(BaseModel):
    items: Items12
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties44(BaseModel):
    key: Key
    operator: Operator
    values: Values3


class Items11(BaseModel):
    properties: Properties44
    required: List[str]
    type: str


class MatchExpressions3(BaseModel):
    items: Items11
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items14(BaseModel):
    type: str


class Values4(BaseModel):
    items: Items14
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties45(BaseModel):
    key: Key
    operator: Operator
    values: Values4


class Items13(BaseModel):
    properties: Properties45
    required: List[str]
    type: str


class MatchFields(BaseModel):
    items: Items13
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties43(BaseModel):
    matchExpressions: MatchExpressions3
    matchFields: MatchFields


class Preference(BaseModel):
    properties: Properties43
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Weight(BaseModel):
    format: str
    type: str


class Properties42(BaseModel):
    preference: Preference
    weight: Weight


class Items10(BaseModel):
    properties: Properties42
    required: List[str]
    type: str


class PreferredDuringSchedulingIgnoredDuringExecution(BaseModel):
    items: Items10
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items17(BaseModel):
    type: str


class Values5(BaseModel):
    items: Items17
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties48(BaseModel):
    key: Key
    operator: Operator
    values: Values5


class Items16(BaseModel):
    properties: Properties48
    required: List[str]
    type: str


class MatchExpressions4(BaseModel):
    items: Items16
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items19(BaseModel):
    type: str


class Values6(BaseModel):
    items: Items19
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties49(BaseModel):
    key: Key
    operator: Operator
    values: Values6


class Items18(BaseModel):
    properties: Properties49
    required: List[str]
    type: str


class MatchFields1(BaseModel):
    items: Items18
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties47(BaseModel):
    matchExpressions: MatchExpressions4
    matchFields: MatchFields1


class Items15(BaseModel):
    properties: Properties47
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class NodeSelectorTerms(BaseModel):
    items: Items15
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties46(BaseModel):
    nodeSelectorTerms: NodeSelectorTerms


class RequiredDuringSchedulingIgnoredDuringExecution(BaseModel):
    properties: Properties46
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties41(BaseModel):
    preferredDuringSchedulingIgnoredDuringExecution: (
        PreferredDuringSchedulingIgnoredDuringExecution
    )
    requiredDuringSchedulingIgnoredDuringExecution: (
        RequiredDuringSchedulingIgnoredDuringExecution
    )


class NodeAffinity(BaseModel):
    properties: Properties41
    type: str


class Items22(BaseModel):
    type: str


class Values7(BaseModel):
    items: Items22
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties54(BaseModel):
    key: Key
    operator: Operator
    values: Values7


class Items21(BaseModel):
    properties: Properties54
    required: List[str]
    type: str


class MatchExpressions5(BaseModel):
    items: Items21
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MatchLabels3(BaseModel):
    additionalProperties: AdditionalProperties6
    type: str


class Properties53(BaseModel):
    matchExpressions: MatchExpressions5
    matchLabels: MatchLabels3


class LabelSelector(BaseModel):
    properties: Properties53
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items23(BaseModel):
    type: str


class MatchLabelKeys(BaseModel):
    items: Items23
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MismatchLabelKeys(BaseModel):
    items: Items23
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Values8(BaseModel):
    items: Items23
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties56(BaseModel):
    key: Key
    operator: Operator
    values: Values8


class Items25(BaseModel):
    properties: Properties56
    required: List[str]
    type: str


class MatchExpressions6(BaseModel):
    items: Items25
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MatchLabels4(BaseModel):
    additionalProperties: AdditionalProperties6
    type: str


class Properties55(BaseModel):
    matchExpressions: MatchExpressions6
    matchLabels: MatchLabels4


class NamespaceSelector(BaseModel):
    properties: Properties55
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items27(BaseModel):
    type: str


class Namespaces(BaseModel):
    items: Items27
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class TopologyKey(BaseModel):
    type: str


class Properties52(BaseModel):
    labelSelector: LabelSelector
    matchLabelKeys: MatchLabelKeys
    mismatchLabelKeys: MismatchLabelKeys
    namespaceSelector: NamespaceSelector
    namespaces: Namespaces
    topologyKey: TopologyKey


class PodAffinityTerm(BaseModel):
    properties: Properties52
    required: List[str]
    type: str


class Properties51(BaseModel):
    podAffinityTerm: PodAffinityTerm
    weight: Weight


class Items20(BaseModel):
    properties: Properties51
    required: List[str]
    type: str


class PreferredDuringSchedulingIgnoredDuringExecution1(BaseModel):
    items: Items20
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items30(BaseModel):
    type: str


class Values9(BaseModel):
    items: Items30
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties59(BaseModel):
    key: Key
    operator: Operator
    values: Values9


class Items29(BaseModel):
    properties: Properties59
    required: List[str]
    type: str


class MatchExpressions7(BaseModel):
    items: Items29
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MatchLabels5(BaseModel):
    additionalProperties: AdditionalProperties6
    type: str


class Properties58(BaseModel):
    matchExpressions: MatchExpressions7
    matchLabels: MatchLabels5


class LabelSelector1(BaseModel):
    properties: Properties58
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items31(BaseModel):
    type: str


class MatchLabelKeys1(BaseModel):
    items: Items31
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MismatchLabelKeys1(BaseModel):
    items: Items31
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Values10(BaseModel):
    items: Items31
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties61(BaseModel):
    key: Key
    operator: Operator
    values: Values10


class Items33(BaseModel):
    properties: Properties61
    required: List[str]
    type: str


class MatchExpressions8(BaseModel):
    items: Items33
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MatchLabels6(BaseModel):
    additionalProperties: AdditionalProperties6
    type: str


class Properties60(BaseModel):
    matchExpressions: MatchExpressions8
    matchLabels: MatchLabels6


class NamespaceSelector1(BaseModel):
    properties: Properties60
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items35(BaseModel):
    type: str


class Namespaces1(BaseModel):
    items: Items35
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties57(BaseModel):
    labelSelector: LabelSelector1
    matchLabelKeys: MatchLabelKeys1
    mismatchLabelKeys: MismatchLabelKeys1
    namespaceSelector: NamespaceSelector1
    namespaces: Namespaces1
    topologyKey: TopologyKey


class Items28(BaseModel):
    properties: Properties57
    required: List[str]
    type: str


class RequiredDuringSchedulingIgnoredDuringExecution1(BaseModel):
    items: Items28
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties50(BaseModel):
    preferredDuringSchedulingIgnoredDuringExecution: (
        PreferredDuringSchedulingIgnoredDuringExecution1
    )
    requiredDuringSchedulingIgnoredDuringExecution: (
        RequiredDuringSchedulingIgnoredDuringExecution1
    )


class PodAffinity(BaseModel):
    properties: Properties50
    type: str


class Items38(BaseModel):
    type: str


class Values11(BaseModel):
    items: Items38
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties66(BaseModel):
    key: Key
    operator: Operator
    values: Values11


class Items37(BaseModel):
    properties: Properties66
    required: List[str]
    type: str


class MatchExpressions9(BaseModel):
    items: Items37
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MatchLabels7(BaseModel):
    additionalProperties: AdditionalProperties6
    type: str


class Properties65(BaseModel):
    matchExpressions: MatchExpressions9
    matchLabels: MatchLabels7


class LabelSelector2(BaseModel):
    properties: Properties65
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items39(BaseModel):
    type: str


class MatchLabelKeys2(BaseModel):
    items: Items39
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MismatchLabelKeys2(BaseModel):
    items: Items39
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Values12(BaseModel):
    items: Items39
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties68(BaseModel):
    key: Key
    operator: Operator
    values: Values12


class Items41(BaseModel):
    properties: Properties68
    required: List[str]
    type: str


class MatchExpressions10(BaseModel):
    items: Items41
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MatchLabels8(BaseModel):
    additionalProperties: AdditionalProperties6
    type: str


class Properties67(BaseModel):
    matchExpressions: MatchExpressions10
    matchLabels: MatchLabels8


class NamespaceSelector2(BaseModel):
    properties: Properties67
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items43(BaseModel):
    type: str


class Namespaces2(BaseModel):
    items: Items43
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties64(BaseModel):
    labelSelector: LabelSelector2
    matchLabelKeys: MatchLabelKeys2
    mismatchLabelKeys: MismatchLabelKeys2
    namespaceSelector: NamespaceSelector2
    namespaces: Namespaces2
    topologyKey: TopologyKey


class PodAffinityTerm1(BaseModel):
    properties: Properties64
    required: List[str]
    type: str


class Properties63(BaseModel):
    podAffinityTerm: PodAffinityTerm1
    weight: Weight


class Items36(BaseModel):
    properties: Properties63
    required: List[str]
    type: str


class PreferredDuringSchedulingIgnoredDuringExecution2(BaseModel):
    items: Items36
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items46(BaseModel):
    type: str


class Values13(BaseModel):
    items: Items46
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties71(BaseModel):
    key: Key
    operator: Operator
    values: Values13


class Items45(BaseModel):
    properties: Properties71
    required: List[str]
    type: str


class MatchExpressions11(BaseModel):
    items: Items45
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MatchLabels9(BaseModel):
    additionalProperties: AdditionalProperties6
    type: str


class Properties70(BaseModel):
    matchExpressions: MatchExpressions11
    matchLabels: MatchLabels9


class LabelSelector3(BaseModel):
    properties: Properties70
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items47(BaseModel):
    type: str


class MatchLabelKeys3(BaseModel):
    items: Items47
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MismatchLabelKeys3(BaseModel):
    items: Items47
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Values14(BaseModel):
    items: Items47
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties73(BaseModel):
    key: Key
    operator: Operator
    values: Values14


class Items49(BaseModel):
    properties: Properties73
    required: List[str]
    type: str


class MatchExpressions12(BaseModel):
    items: Items49
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MatchLabels10(BaseModel):
    additionalProperties: AdditionalProperties6
    type: str


class Properties72(BaseModel):
    matchExpressions: MatchExpressions12
    matchLabels: MatchLabels10


class NamespaceSelector3(BaseModel):
    properties: Properties72
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items51(BaseModel):
    type: str


class Namespaces3(BaseModel):
    items: Items51
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties69(BaseModel):
    labelSelector: LabelSelector3
    matchLabelKeys: MatchLabelKeys3
    mismatchLabelKeys: MismatchLabelKeys3
    namespaceSelector: NamespaceSelector3
    namespaces: Namespaces3
    topologyKey: TopologyKey


class Items44(BaseModel):
    properties: Properties69
    required: List[str]
    type: str


class RequiredDuringSchedulingIgnoredDuringExecution2(BaseModel):
    items: Items44
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties62(BaseModel):
    preferredDuringSchedulingIgnoredDuringExecution: (
        PreferredDuringSchedulingIgnoredDuringExecution2
    )
    requiredDuringSchedulingIgnoredDuringExecution: (
        RequiredDuringSchedulingIgnoredDuringExecution2
    )


class PodAntiAffinity(BaseModel):
    properties: Properties62
    type: str


class Properties40(BaseModel):
    nodeAffinity: NodeAffinity
    podAffinity: PodAffinity
    podAntiAffinity: PodAntiAffinity


class Affinity(BaseModel):
    properties: Properties40
    type: str


class Items53(BaseModel):
    type: str


class Args(BaseModel):
    items: Items53
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Command(BaseModel):
    items: Items53
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Name9(BaseModel):
    type: str


class Name10(BaseModel):
    default: str
    type: str


class Properties77(BaseModel):
    key: Key
    name: Name10
    optional: Optional


class ConfigMapKeyRef1(BaseModel):
    properties: Properties77
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties78(BaseModel):
    apiVersion: ApiVersion
    fieldPath: FieldPath


class FieldRef1(BaseModel):
    properties: Properties78
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Divisor1(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties79(BaseModel):
    containerName: ContainerName
    divisor: Divisor1
    resource: Resource1


class ResourceFieldRef1(BaseModel):
    properties: Properties79
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties80(BaseModel):
    key: Key
    name: Name10
    optional: Optional


class SecretKeyRef1(BaseModel):
    properties: Properties80
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties76(BaseModel):
    configMapKeyRef: ConfigMapKeyRef1
    fieldRef: FieldRef1
    resourceFieldRef: ResourceFieldRef1
    secretKeyRef: SecretKeyRef1


class ValueFrom1(BaseModel):
    properties: Properties76
    type: str


class Properties75(BaseModel):
    name: Name9
    value: Value7
    valueFrom: ValueFrom1


class Items55(BaseModel):
    properties: Properties75
    required: List[str]
    type: str


class Env(BaseModel):
    items: Items55
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties82(BaseModel):
    name: Name10
    optional: Optional


class ConfigMapRef(BaseModel):
    properties: Properties82
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Prefix(BaseModel):
    type: str


class Properties83(BaseModel):
    name: Name10
    optional: Optional


class SecretRef(BaseModel):
    properties: Properties83
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties81(BaseModel):
    configMapRef: ConfigMapRef
    prefix: Prefix
    secretRef: SecretRef


class Items56(BaseModel):
    properties: Properties81
    type: str


class EnvFrom(BaseModel):
    items: Items56
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Image(BaseModel):
    type: str


class ImagePullPolicy(BaseModel):
    type: str


class Items57(BaseModel):
    type: str


class Command1(BaseModel):
    items: Items57
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties86(BaseModel):
    command: Command1


class Exec(BaseModel):
    properties: Properties86
    type: str


class Host(BaseModel):
    type: str


class Name14(BaseModel):
    type: str


class Properties88(BaseModel):
    name: Name14
    value: Value7


class Items58(BaseModel):
    properties: Properties88
    required: List[str]
    type: str


class HttpHeaders(BaseModel):
    items: Items58
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Path(BaseModel):
    type: str


class Port(BaseModel):
    anyOf: List[AnyOfItem]
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Scheme(BaseModel):
    type: str


class Properties87(BaseModel):
    host: Host
    httpHeaders: HttpHeaders
    path: Path
    port: Port
    scheme: Scheme


class HttpGet(BaseModel):
    properties: Properties87
    required: List[str]
    type: str


class Seconds(BaseModel):
    format: str
    type: str


class Properties89(BaseModel):
    seconds: Seconds


class Sleep(BaseModel):
    properties: Properties89
    required: List[str]
    type: str


class Port1(BaseModel):
    anyOf: List[AnyOfItem]
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties90(BaseModel):
    host: Host
    port: Port1


class TcpSocket(BaseModel):
    properties: Properties90
    required: List[str]
    type: str


class Properties85(BaseModel):
    exec: Exec
    httpGet: HttpGet
    sleep: Sleep
    tcpSocket: TcpSocket


class PostStart(BaseModel):
    properties: Properties85
    type: str


class Items59(BaseModel):
    type: str


class Command2(BaseModel):
    items: Items59
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties92(BaseModel):
    command: Command2


class Exec1(BaseModel):
    properties: Properties92
    type: str


class Properties94(BaseModel):
    name: Name14
    value: Value7


class Items60(BaseModel):
    properties: Properties94
    required: List[str]
    type: str


class HttpHeaders1(BaseModel):
    items: Items60
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Port2(BaseModel):
    anyOf: List[AnyOfItem]
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties93(BaseModel):
    host: Host
    httpHeaders: HttpHeaders1
    path: Path
    port: Port2
    scheme: Scheme


class HttpGet1(BaseModel):
    properties: Properties93
    required: List[str]
    type: str


class Properties95(BaseModel):
    seconds: Seconds


class Sleep1(BaseModel):
    properties: Properties95
    required: List[str]
    type: str


class Port3(BaseModel):
    anyOf: List[AnyOfItem]
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties96(BaseModel):
    host: Host
    port: Port3


class TcpSocket1(BaseModel):
    properties: Properties96
    required: List[str]
    type: str


class Properties91(BaseModel):
    exec: Exec1
    httpGet: HttpGet1
    sleep: Sleep1
    tcpSocket: TcpSocket1


class PreStop(BaseModel):
    properties: Properties91
    type: str


class Properties84(BaseModel):
    postStart: PostStart
    preStop: PreStop


class Lifecycle(BaseModel):
    properties: Properties84
    type: str


class Items61(BaseModel):
    type: str


class Command3(BaseModel):
    items: Items61
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties98(BaseModel):
    command: Command3


class Exec2(BaseModel):
    properties: Properties98
    type: str


class FailureThreshold(BaseModel):
    format: str
    type: str


class Port4(BaseModel):
    format: str
    type: str


class Service(BaseModel):
    default: str
    type: str


class Properties99(BaseModel):
    port: Port4
    service: Service


class Grpc(BaseModel):
    properties: Properties99
    required: List[str]
    type: str


class Properties101(BaseModel):
    name: Name14
    value: Value7


class Items62(BaseModel):
    properties: Properties101
    required: List[str]
    type: str


class HttpHeaders2(BaseModel):
    items: Items62
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Port5(BaseModel):
    anyOf: List[AnyOfItem]
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties100(BaseModel):
    host: Host
    httpHeaders: HttpHeaders2
    path: Path
    port: Port5
    scheme: Scheme


class HttpGet2(BaseModel):
    properties: Properties100
    required: List[str]
    type: str


class InitialDelaySeconds(BaseModel):
    format: str
    type: str


class SuccessThreshold(BaseModel):
    format: str
    type: str


class Port6(BaseModel):
    anyOf: List[AnyOfItem]
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties102(BaseModel):
    host: Host
    port: Port6


class TcpSocket2(BaseModel):
    properties: Properties102
    required: List[str]
    type: str


class TerminationGracePeriodSeconds(BaseModel):
    format: str
    type: str


class TimeoutSeconds(BaseModel):
    format: str
    type: str


class Properties97(BaseModel):
    exec: Exec2
    failureThreshold: FailureThreshold
    grpc: Grpc
    httpGet: HttpGet2
    initialDelaySeconds: InitialDelaySeconds
    periodSeconds: PeriodSeconds
    successThreshold: SuccessThreshold
    tcpSocket: TcpSocket2
    terminationGracePeriodSeconds: TerminationGracePeriodSeconds
    timeoutSeconds: TimeoutSeconds


class LivenessProbe(BaseModel):
    properties: Properties97
    type: str


class ContainerPort(BaseModel):
    format: str
    type: str


class HostIP(BaseModel):
    type: str


class HostPort(BaseModel):
    format: str
    type: str


class Protocol(BaseModel):
    default: str
    type: str


class Properties103(BaseModel):
    containerPort: ContainerPort
    hostIP: HostIP
    hostPort: HostPort
    name: Name14
    protocol: Protocol


class Items63(BaseModel):
    properties: Properties103
    required: List[str]
    type: str


class Ports(BaseModel):
    items: Items63
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Items64(BaseModel):
    type: str


class Command4(BaseModel):
    items: Items64
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties105(BaseModel):
    command: Command4


class Exec3(BaseModel):
    properties: Properties105
    type: str


class Port7(BaseModel):
    format: str
    type: str


class Properties106(BaseModel):
    port: Port7
    service: Service


class Grpc1(BaseModel):
    properties: Properties106
    required: List[str]
    type: str


class Properties108(BaseModel):
    name: Name14
    value: Value7


class Items65(BaseModel):
    properties: Properties108
    required: List[str]
    type: str


class HttpHeaders3(BaseModel):
    items: Items65
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Port8(BaseModel):
    anyOf: List[AnyOfItem]
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties107(BaseModel):
    host: Host
    httpHeaders: HttpHeaders3
    path: Path
    port: Port8
    scheme: Scheme


class HttpGet3(BaseModel):
    properties: Properties107
    required: List[str]
    type: str


class Port9(BaseModel):
    anyOf: List[AnyOfItem]
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties109(BaseModel):
    host: Host
    port: Port9


class TcpSocket3(BaseModel):
    properties: Properties109
    required: List[str]
    type: str


class Properties104(BaseModel):
    exec: Exec3
    failureThreshold: FailureThreshold
    grpc: Grpc1
    httpGet: HttpGet3
    initialDelaySeconds: InitialDelaySeconds
    periodSeconds: PeriodSeconds
    successThreshold: SuccessThreshold
    tcpSocket: TcpSocket3
    terminationGracePeriodSeconds: TerminationGracePeriodSeconds
    timeoutSeconds: TimeoutSeconds


class ReadinessProbe(BaseModel):
    properties: Properties104
    type: str


class ResourceName(BaseModel):
    type: str


class RestartPolicy(BaseModel):
    type: str


class Properties110(BaseModel):
    resourceName: ResourceName
    restartPolicy: RestartPolicy


class Items66(BaseModel):
    properties: Properties110
    required: List[str]
    type: str


class ResizePolicy(BaseModel):
    items: Items66
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Request(BaseModel):
    type: str


class Properties112(BaseModel):
    name: Name14
    request: Request


class Items67(BaseModel):
    properties: Properties112
    required: List[str]
    type: str


class Claims(BaseModel):
    items: Items67
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class AdditionalProperties16(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Limits(BaseModel):
    additionalProperties: AdditionalProperties16
    type: str


class AdditionalProperties17(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Requests(BaseModel):
    additionalProperties: AdditionalProperties17
    type: str


class Properties111(BaseModel):
    claims: Claims
    limits: Limits
    requests: Requests


class Resources(BaseModel):
    properties: Properties111
    type: str


class AllowPrivilegeEscalation(BaseModel):
    type: str


class LocalhostProfile(BaseModel):
    type: str


class Properties114(BaseModel):
    localhostProfile: LocalhostProfile
    type: Type


class AppArmorProfile(BaseModel):
    properties: Properties114
    required: List[str]
    type: str


class Items68(BaseModel):
    type: str


class Add(BaseModel):
    items: Items68
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Drop(BaseModel):
    items: Items68
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties115(BaseModel):
    add: Add
    drop: Drop


class Capabilities(BaseModel):
    properties: Properties115
    type: str


class Privileged(BaseModel):
    type: str


class ProcMount(BaseModel):
    type: str


class ReadOnlyRootFilesystem(BaseModel):
    type: str


class RunAsGroup(BaseModel):
    format: str
    type: str


class RunAsNonRoot(BaseModel):
    type: str


class RunAsUser(BaseModel):
    format: str
    type: str


class Level(BaseModel):
    type: str


class Role(BaseModel):
    type: str


class User(BaseModel):
    type: str


class Properties116(BaseModel):
    level: Level
    role: Role
    type: Type
    user: User


class SeLinuxOptions(BaseModel):
    properties: Properties116
    type: str


class Properties117(BaseModel):
    localhostProfile: LocalhostProfile
    type: Type


class SeccompProfile(BaseModel):
    properties: Properties117
    required: List[str]
    type: str


class GmsaCredentialSpec(BaseModel):
    type: str


class GmsaCredentialSpecName(BaseModel):
    type: str


class HostProcess(BaseModel):
    type: str


class RunAsUserName(BaseModel):
    type: str


class Properties118(BaseModel):
    gmsaCredentialSpec: GmsaCredentialSpec
    gmsaCredentialSpecName: GmsaCredentialSpecName
    hostProcess: HostProcess
    runAsUserName: RunAsUserName


class WindowsOptions(BaseModel):
    properties: Properties118
    type: str


class Properties113(BaseModel):
    allowPrivilegeEscalation: AllowPrivilegeEscalation
    appArmorProfile: AppArmorProfile
    capabilities: Capabilities
    privileged: Privileged
    procMount: ProcMount
    readOnlyRootFilesystem: ReadOnlyRootFilesystem
    runAsGroup: RunAsGroup
    runAsNonRoot: RunAsNonRoot
    runAsUser: RunAsUser
    seLinuxOptions: SeLinuxOptions
    seccompProfile: SeccompProfile
    windowsOptions: WindowsOptions


class SecurityContext(BaseModel):
    properties: Properties113
    type: str


class Command5(BaseModel):
    items: Items68
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties120(BaseModel):
    command: Command5


class Exec4(BaseModel):
    properties: Properties120
    type: str


class Port10(BaseModel):
    format: str
    type: str


class Properties121(BaseModel):
    port: Port10
    service: Service


class Grpc2(BaseModel):
    properties: Properties121
    required: List[str]
    type: str


class Properties123(BaseModel):
    name: Name14
    value: Value7


class Items71(BaseModel):
    properties: Properties123
    required: List[str]
    type: str


class HttpHeaders4(BaseModel):
    items: Items71
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Port11(BaseModel):
    anyOf: List[AnyOfItem]
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties122(BaseModel):
    host: Host
    httpHeaders: HttpHeaders4
    path: Path
    port: Port11
    scheme: Scheme


class HttpGet4(BaseModel):
    properties: Properties122
    required: List[str]
    type: str


class Port12(BaseModel):
    anyOf: List[AnyOfItem]
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties124(BaseModel):
    host: Host
    port: Port12


class TcpSocket4(BaseModel):
    properties: Properties124
    required: List[str]
    type: str


class Properties119(BaseModel):
    exec: Exec4
    failureThreshold: FailureThreshold
    grpc: Grpc2
    httpGet: HttpGet4
    initialDelaySeconds: InitialDelaySeconds
    periodSeconds: PeriodSeconds
    successThreshold: SuccessThreshold
    tcpSocket: TcpSocket4
    terminationGracePeriodSeconds: TerminationGracePeriodSeconds
    timeoutSeconds: TimeoutSeconds


class StartupProbe(BaseModel):
    properties: Properties119
    type: str


class Stdin(BaseModel):
    type: str


class StdinOnce(BaseModel):
    type: str


class TerminationMessagePath(BaseModel):
    type: str


class TerminationMessagePolicy(BaseModel):
    type: str


class Tty(BaseModel):
    type: str


class DevicePath(BaseModel):
    type: str


class Properties125(BaseModel):
    devicePath: DevicePath
    name: Name14


class Items72(BaseModel):
    properties: Properties125
    required: List[str]
    type: str


class VolumeDevices(BaseModel):
    items: Items72
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MountPath(BaseModel):
    type: str


class MountPropagation(BaseModel):
    type: str


class ReadOnly(BaseModel):
    type: str


class RecursiveReadOnly(BaseModel):
    type: str


class SubPath(BaseModel):
    type: str


class SubPathExpr(BaseModel):
    type: str


class Properties126(BaseModel):
    mountPath: MountPath
    mountPropagation: MountPropagation
    name: Name14
    readOnly: ReadOnly
    recursiveReadOnly: RecursiveReadOnly
    subPath: SubPath
    subPathExpr: SubPathExpr


class Items73(BaseModel):
    properties: Properties126
    required: List[str]
    type: str


class VolumeMounts(BaseModel):
    items: Items73
    type: str
    x_kubernetes_list_map_keys: List[str] = Field(
        ..., alias='x-kubernetes-list-map-keys'
    )
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class WorkingDir(BaseModel):
    type: str


class Properties74(BaseModel):
    args: Args
    command: Command
    env: Env
    envFrom: EnvFrom
    image: Image
    imagePullPolicy: ImagePullPolicy
    lifecycle: Lifecycle
    livenessProbe: LivenessProbe
    name: Name14
    ports: Ports
    readinessProbe: ReadinessProbe
    resizePolicy: ResizePolicy
    resources: Resources
    restartPolicy: RestartPolicy
    securityContext: SecurityContext
    startupProbe: StartupProbe
    stdin: Stdin
    stdinOnce: StdinOnce
    terminationMessagePath: TerminationMessagePath
    terminationMessagePolicy: TerminationMessagePolicy
    tty: Tty
    volumeDevices: VolumeDevices
    volumeMounts: VolumeMounts
    workingDir: WorkingDir


class Items52(BaseModel):
    properties: Properties74
    required: List[str]
    type: str


class Containers(BaseModel):
    items: Items52
    type: str


class AdditionalProperties18(BaseModel):
    type: str


class NodeSelector(BaseModel):
    additionalProperties: AdditionalProperties18
    type: str


class PriorityClassName(BaseModel):
    type: str


class SchedulerName(BaseModel):
    type: str


class ServiceAccountName(BaseModel):
    type: str


class Effect(BaseModel):
    type: str


class TolerationSeconds(BaseModel):
    format: str
    type: str


class Properties127(BaseModel):
    effect: Effect
    key: Key
    operator: Operator
    tolerationSeconds: TolerationSeconds
    value: Value7


class Items74(BaseModel):
    properties: Properties127
    type: str


class Tolerations(BaseModel):
    items: Items74
    type: str


class Items77(BaseModel):
    type: str


class Values15(BaseModel):
    items: Items77
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties130(BaseModel):
    key: Key
    operator: Operator
    values: Values15


class Items76(BaseModel):
    properties: Properties130
    required: List[str]
    type: str


class MatchExpressions13(BaseModel):
    items: Items76
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MatchLabels11(BaseModel):
    additionalProperties: AdditionalProperties18
    type: str


class Properties129(BaseModel):
    matchExpressions: MatchExpressions13
    matchLabels: MatchLabels11


class LabelSelector4(BaseModel):
    properties: Properties129
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Items78(BaseModel):
    type: str


class MatchLabelKeys4(BaseModel):
    items: Items78
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MaxSkew(BaseModel):
    format: str
    type: str


class MinDomains(BaseModel):
    format: str
    type: str


class NodeAffinityPolicy(BaseModel):
    type: str


class NodeTaintsPolicy(BaseModel):
    type: str


class WhenUnsatisfiable(BaseModel):
    type: str


class Properties128(BaseModel):
    labelSelector: LabelSelector4
    matchLabelKeys: MatchLabelKeys4
    maxSkew: MaxSkew
    minDomains: MinDomains
    nodeAffinityPolicy: NodeAffinityPolicy
    nodeTaintsPolicy: NodeTaintsPolicy
    topologyKey: TopologyKey
    whenUnsatisfiable: WhenUnsatisfiable


class Items75(BaseModel):
    properties: Properties128
    required: List[str]
    type: str


class TopologySpreadConstraints(BaseModel):
    items: Items75
    type: str


class Properties39(BaseModel):
    affinity: Affinity
    containers: Containers
    nodeSelector: NodeSelector
    priorityClassName: PriorityClassName
    schedulerName: SchedulerName
    serviceAccountName: ServiceAccountName
    tolerations: Tolerations
    topologySpreadConstraints: TopologySpreadConstraints


class ExtraPodSpec(BaseModel):
    properties: Properties39
    type: str


class Annotations3(BaseModel):
    additionalProperties: AdditionalProperties18
    type: str


class HostPrefix(BaseModel):
    type: str


class Labels1(BaseModel):
    additionalProperties: AdditionalProperties18
    type: str


class SecretName(BaseModel):
    type: str


class Properties132(BaseModel):
    secretName: SecretName


class Tls(BaseModel):
    properties: Properties132
    type: str


class UseVirtualService(BaseModel):
    type: str


class Properties131(BaseModel):
    annotations: Annotations3
    enabled: Enabled
    hostPrefix: HostPrefix
    labels: Labels1
    tls: Tls
    useVirtualService: UseVirtualService


class Ingress(BaseModel):
    properties: Properties131
    type: str


class Labels2(BaseModel):
    additionalProperties: AdditionalProperties18
    type: str


class Items79(BaseModel):
    type: str


class Command6(BaseModel):
    items: Items79
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties134(BaseModel):
    command: Command6


class Exec5(BaseModel):
    properties: Properties134
    type: str


class Port13(BaseModel):
    format: str
    type: str


class Properties135(BaseModel):
    port: Port13
    service: Service


class Grpc3(BaseModel):
    properties: Properties135
    required: List[str]
    type: str


class Properties137(BaseModel):
    name: Name14
    value: Value7


class Items80(BaseModel):
    properties: Properties137
    required: List[str]
    type: str


class HttpHeaders5(BaseModel):
    items: Items80
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Port14(BaseModel):
    anyOf: List[AnyOfItem]
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties136(BaseModel):
    host: Host
    httpHeaders: HttpHeaders5
    path: Path
    port: Port14
    scheme: Scheme


class HttpGet5(BaseModel):
    properties: Properties136
    required: List[str]
    type: str


class Port15(BaseModel):
    anyOf: List[AnyOfItem]
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties138(BaseModel):
    host: Host
    port: Port15


class TcpSocket5(BaseModel):
    properties: Properties138
    required: List[str]
    type: str


class Properties133(BaseModel):
    exec: Exec5
    failureThreshold: FailureThreshold
    grpc: Grpc3
    httpGet: HttpGet5
    initialDelaySeconds: InitialDelaySeconds
    periodSeconds: PeriodSeconds
    successThreshold: SuccessThreshold
    tcpSocket: TcpSocket5
    terminationGracePeriodSeconds: TerminationGracePeriodSeconds
    timeoutSeconds: TimeoutSeconds


class LivenessProbe1(BaseModel):
    properties: Properties133
    type: str


class FsType(BaseModel):
    type: str


class Partition(BaseModel):
    format: str
    type: str


class VolumeID(BaseModel):
    type: str


class Properties141(BaseModel):
    fsType: FsType
    partition: Partition
    readOnly: ReadOnly
    volumeID: VolumeID


class AwsElasticBlockStore(BaseModel):
    properties: Properties141
    required: List[str]
    type: str


class CachingMode(BaseModel):
    type: str


class DiskName(BaseModel):
    type: str


class DiskURI(BaseModel):
    type: str


class FsType1(BaseModel):
    default: str
    type: str


class ReadOnly2(BaseModel):
    default: bool
    type: str


class Properties142(BaseModel):
    cachingMode: CachingMode
    diskName: DiskName
    diskURI: DiskURI
    fsType: FsType1
    kind: Kind
    readOnly: ReadOnly2


class AzureDisk(BaseModel):
    properties: Properties142
    required: List[str]
    type: str


class ReadOnly3(BaseModel):
    type: str


class ShareName(BaseModel):
    type: str


class Properties143(BaseModel):
    readOnly: ReadOnly3
    secretName: SecretName
    shareName: ShareName


class AzureFile(BaseModel):
    properties: Properties143
    required: List[str]
    type: str


class Items82(BaseModel):
    type: str


class Monitors(BaseModel):
    items: Items82
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class SecretFile(BaseModel):
    type: str


class Name25(BaseModel):
    default: str
    type: str


class Properties145(BaseModel):
    name: Name25


class SecretRef1(BaseModel):
    properties: Properties145
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties144(BaseModel):
    monitors: Monitors
    path: Path
    readOnly: ReadOnly3
    secretFile: SecretFile
    secretRef: SecretRef1
    user: User


class Cephfs(BaseModel):
    properties: Properties144
    required: List[str]
    type: str


class FsType2(BaseModel):
    type: str


class Properties147(BaseModel):
    name: Name25


class SecretRef2(BaseModel):
    properties: Properties147
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties146(BaseModel):
    fsType: FsType2
    readOnly: ReadOnly3
    secretRef: SecretRef2
    volumeID: VolumeID


class Cinder(BaseModel):
    properties: Properties146
    required: List[str]
    type: str


class DefaultMode(BaseModel):
    format: str
    type: str


class Mode(BaseModel):
    format: str
    type: str


class Properties149(BaseModel):
    key: Key
    mode: Mode
    path: Path


class Items84(BaseModel):
    properties: Properties149
    required: List[str]
    type: str


class Items83(BaseModel):
    items: Items84
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties148(BaseModel):
    defaultMode: DefaultMode
    items: Items83
    name: Name25
    optional: Optional


class ConfigMap(BaseModel):
    properties: Properties148
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Driver(BaseModel):
    type: str


class Properties151(BaseModel):
    name: Name25


class NodePublishSecretRef(BaseModel):
    properties: Properties151
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class VolumeAttributes(BaseModel):
    additionalProperties: AdditionalProperties18
    type: str


class Properties150(BaseModel):
    driver: Driver
    fsType: FsType2
    nodePublishSecretRef: NodePublishSecretRef
    readOnly: ReadOnly3
    volumeAttributes: VolumeAttributes


class Csi(BaseModel):
    properties: Properties150
    required: List[str]
    type: str


class Properties154(BaseModel):
    apiVersion: ApiVersion
    fieldPath: FieldPath


class FieldRef2(BaseModel):
    properties: Properties154
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Divisor2(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties155(BaseModel):
    containerName: ContainerName
    divisor: Divisor2
    resource: Resource1


class ResourceFieldRef2(BaseModel):
    properties: Properties155
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties153(BaseModel):
    fieldRef: FieldRef2
    mode: Mode
    path: Path
    resourceFieldRef: ResourceFieldRef2


class Items86(BaseModel):
    properties: Properties153
    required: List[str]
    type: str


class Items85(BaseModel):
    items: Items86
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties152(BaseModel):
    defaultMode: DefaultMode
    items: Items85


class DownwardAPI(BaseModel):
    properties: Properties152
    type: str


class Medium(BaseModel):
    type: str


class SizeLimit(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties156(BaseModel):
    medium: Medium
    sizeLimit: SizeLimit


class EmptyDir(BaseModel):
    properties: Properties156
    type: str


class Items87(BaseModel):
    type: str


class AccessModes(BaseModel):
    items: Items87
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class ApiGroup(BaseModel):
    type: str


class Name29(BaseModel):
    type: str


class Properties160(BaseModel):
    apiGroup: ApiGroup
    kind: Kind
    name: Name29


class DataSource(BaseModel):
    properties: Properties160
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Namespace(BaseModel):
    type: str


class Properties161(BaseModel):
    apiGroup: ApiGroup
    kind: Kind
    name: Name29
    namespace: Namespace


class DataSourceRef(BaseModel):
    properties: Properties161
    required: List[str]
    type: str


class AdditionalProperties24(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Limits1(BaseModel):
    additionalProperties: AdditionalProperties24
    type: str


class AdditionalProperties25(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Requests1(BaseModel):
    additionalProperties: AdditionalProperties25
    type: str


class Properties162(BaseModel):
    limits: Limits1
    requests: Requests1


class Resources1(BaseModel):
    properties: Properties162
    type: str


class Values16(BaseModel):
    items: Items87
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties164(BaseModel):
    key: Key
    operator: Operator
    values: Values16


class Items88(BaseModel):
    properties: Properties164
    required: List[str]
    type: str


class MatchExpressions14(BaseModel):
    items: Items88
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class AdditionalProperties26(BaseModel):
    type: str


class MatchLabels12(BaseModel):
    additionalProperties: AdditionalProperties26
    type: str


class Properties163(BaseModel):
    matchExpressions: MatchExpressions14
    matchLabels: MatchLabels12


class Selector3(BaseModel):
    properties: Properties163
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class StorageClassName(BaseModel):
    type: str


class VolumeAttributesClassName(BaseModel):
    type: str


class VolumeMode(BaseModel):
    type: str


class VolumeName(BaseModel):
    type: str


class Properties159(BaseModel):
    accessModes: AccessModes
    dataSource: DataSource
    dataSourceRef: DataSourceRef
    resources: Resources1
    selector: Selector3
    storageClassName: StorageClassName
    volumeAttributesClassName: VolumeAttributesClassName
    volumeMode: VolumeMode
    volumeName: VolumeName


class Spec3(BaseModel):
    properties: Properties159
    type: str


class Properties158(BaseModel):
    metadata: Metadata1
    spec: Spec3


class VolumeClaimTemplate(BaseModel):
    properties: Properties158
    required: List[str]
    type: str


class Properties157(BaseModel):
    volumeClaimTemplate: VolumeClaimTemplate


class Ephemeral(BaseModel):
    properties: Properties157
    type: str


class Lun(BaseModel):
    format: str
    type: str


class Items90(BaseModel):
    type: str


class TargetWWNs(BaseModel):
    items: Items90
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Wwids(BaseModel):
    items: Items90
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties165(BaseModel):
    fsType: FsType2
    lun: Lun
    readOnly: ReadOnly3
    targetWWNs: TargetWWNs
    wwids: Wwids


class Fc(BaseModel):
    properties: Properties165
    type: str


class Options(BaseModel):
    additionalProperties: AdditionalProperties26
    type: str


class Name31(BaseModel):
    default: str
    type: str


class Properties167(BaseModel):
    name: Name31


class SecretRef3(BaseModel):
    properties: Properties167
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties166(BaseModel):
    driver: Driver
    fsType: FsType2
    options: Options
    readOnly: ReadOnly3
    secretRef: SecretRef3


class FlexVolume(BaseModel):
    properties: Properties166
    required: List[str]
    type: str


class DatasetName(BaseModel):
    type: str


class DatasetUUID(BaseModel):
    type: str


class Properties168(BaseModel):
    datasetName: DatasetName
    datasetUUID: DatasetUUID


class Flocker(BaseModel):
    properties: Properties168
    type: str


class PdName(BaseModel):
    type: str


class Properties169(BaseModel):
    fsType: FsType2
    partition: Partition
    pdName: PdName
    readOnly: ReadOnly3


class GcePersistentDisk(BaseModel):
    properties: Properties169
    required: List[str]
    type: str


class Directory(BaseModel):
    type: str


class Repository(BaseModel):
    type: str


class Revision(BaseModel):
    type: str


class Properties170(BaseModel):
    directory: Directory
    repository: Repository
    revision: Revision


class GitRepo(BaseModel):
    properties: Properties170
    required: List[str]
    type: str


class Endpoints(BaseModel):
    type: str


class Properties171(BaseModel):
    endpoints: Endpoints
    path: Path
    readOnly: ReadOnly3


class Glusterfs(BaseModel):
    properties: Properties171
    required: List[str]
    type: str


class Properties172(BaseModel):
    path: Path
    type: Type


class HostPath(BaseModel):
    properties: Properties172
    required: List[str]
    type: str


class PullPolicy(BaseModel):
    type: str


class Reference(BaseModel):
    type: str


class Properties173(BaseModel):
    pullPolicy: PullPolicy
    reference: Reference


class Image1(BaseModel):
    properties: Properties173
    type: str


class ChapAuthDiscovery(BaseModel):
    type: str


class ChapAuthSession(BaseModel):
    type: str


class InitiatorName(BaseModel):
    type: str


class Iqn(BaseModel):
    type: str


class IscsiInterface(BaseModel):
    default: str
    type: str


class Portals(BaseModel):
    items: Items90
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties175(BaseModel):
    name: Name31


class SecretRef4(BaseModel):
    properties: Properties175
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class TargetPortal(BaseModel):
    type: str


class Properties174(BaseModel):
    chapAuthDiscovery: ChapAuthDiscovery
    chapAuthSession: ChapAuthSession
    fsType: FsType2
    initiatorName: InitiatorName
    iqn: Iqn
    iscsiInterface: IscsiInterface
    lun: Lun
    portals: Portals
    readOnly: ReadOnly3
    secretRef: SecretRef4
    targetPortal: TargetPortal


class Iscsi(BaseModel):
    properties: Properties174
    required: List[str]
    type: str


class Server(BaseModel):
    type: str


class Properties176(BaseModel):
    path: Path
    readOnly: ReadOnly3
    server: Server


class Nfs(BaseModel):
    properties: Properties176
    required: List[str]
    type: str


class ClaimName(BaseModel):
    type: str


class Properties177(BaseModel):
    claimName: ClaimName
    readOnly: ReadOnly3


class PersistentVolumeClaim(BaseModel):
    properties: Properties177
    required: List[str]
    type: str


class PdID(BaseModel):
    type: str


class Properties178(BaseModel):
    fsType: FsType2
    pdID: PdID


class PhotonPersistentDisk(BaseModel):
    properties: Properties178
    required: List[str]
    type: str


class Properties179(BaseModel):
    fsType: FsType2
    readOnly: ReadOnly3
    volumeID: VolumeID


class PortworxVolume(BaseModel):
    properties: Properties179
    required: List[str]
    type: str


class Values17(BaseModel):
    items: Items90
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties184(BaseModel):
    key: Key
    operator: Operator
    values: Values17


class Items94(BaseModel):
    properties: Properties184
    required: List[str]
    type: str


class MatchExpressions15(BaseModel):
    items: Items94
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class MatchLabels13(BaseModel):
    additionalProperties: AdditionalProperties26
    type: str


class Properties183(BaseModel):
    matchExpressions: MatchExpressions15
    matchLabels: MatchLabels13


class LabelSelector5(BaseModel):
    properties: Properties183
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Name33(BaseModel):
    type: str


class SignerName(BaseModel):
    type: str


class Properties182(BaseModel):
    labelSelector: LabelSelector5
    name: Name33
    optional: Optional
    path: Path
    signerName: SignerName


class ClusterTrustBundle(BaseModel):
    properties: Properties182
    required: List[str]
    type: str


class Properties186(BaseModel):
    key: Key
    mode: Mode
    path: Path


class Items97(BaseModel):
    properties: Properties186
    required: List[str]
    type: str


class Items96(BaseModel):
    items: Items97
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Name34(BaseModel):
    default: str
    type: str


class Properties185(BaseModel):
    items: Items96
    name: Name34
    optional: Optional


class ConfigMap1(BaseModel):
    properties: Properties185
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties189(BaseModel):
    apiVersion: ApiVersion
    fieldPath: FieldPath


class FieldRef3(BaseModel):
    properties: Properties189
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Divisor3(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties190(BaseModel):
    containerName: ContainerName
    divisor: Divisor3
    resource: Resource1


class ResourceFieldRef3(BaseModel):
    properties: Properties190
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties188(BaseModel):
    fieldRef: FieldRef3
    mode: Mode
    path: Path
    resourceFieldRef: ResourceFieldRef3


class Items99(BaseModel):
    properties: Properties188
    required: List[str]
    type: str


class Items98(BaseModel):
    items: Items99
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties187(BaseModel):
    items: Items98


class DownwardAPI1(BaseModel):
    properties: Properties187
    type: str


class Properties192(BaseModel):
    key: Key
    mode: Mode
    path: Path


class Items101(BaseModel):
    properties: Properties192
    required: List[str]
    type: str


class Items100(BaseModel):
    items: Items101
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties191(BaseModel):
    items: Items100
    name: Name34
    optional: Optional


class Secret(BaseModel):
    properties: Properties191
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Audience(BaseModel):
    type: str


class ExpirationSeconds(BaseModel):
    format: str
    type: str


class Properties193(BaseModel):
    audience: Audience
    expirationSeconds: ExpirationSeconds
    path: Path


class ServiceAccountToken(BaseModel):
    properties: Properties193
    required: List[str]
    type: str


class Properties181(BaseModel):
    clusterTrustBundle: ClusterTrustBundle
    configMap: ConfigMap1
    downwardAPI: DownwardAPI1
    secret: Secret
    serviceAccountToken: ServiceAccountToken


class Items93(BaseModel):
    properties: Properties181
    type: str


class Sources(BaseModel):
    items: Items93
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties180(BaseModel):
    defaultMode: DefaultMode
    sources: Sources


class Projected(BaseModel):
    properties: Properties180
    type: str


class Group(BaseModel):
    type: str


class Registry(BaseModel):
    type: str


class Tenant(BaseModel):
    type: str


class Volume(BaseModel):
    type: str


class Properties194(BaseModel):
    group: Group
    readOnly: ReadOnly3
    registry: Registry
    tenant: Tenant
    user: User
    volume: Volume


class Quobyte(BaseModel):
    properties: Properties194
    required: List[str]
    type: str


class Image2(BaseModel):
    type: str


class Keyring(BaseModel):
    default: str
    type: str


class Items102(BaseModel):
    type: str


class Monitors1(BaseModel):
    items: Items102
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Pool(BaseModel):
    default: str
    type: str


class Properties196(BaseModel):
    name: Name34


class SecretRef5(BaseModel):
    properties: Properties196
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class User3(BaseModel):
    default: str
    type: str


class Properties195(BaseModel):
    fsType: FsType2
    image: Image2
    keyring: Keyring
    monitors: Monitors1
    pool: Pool
    readOnly: ReadOnly3
    secretRef: SecretRef5
    user: User3


class Rbd(BaseModel):
    properties: Properties195
    required: List[str]
    type: str


class FsType11(BaseModel):
    default: str
    type: str


class Gateway(BaseModel):
    type: str


class ProtectionDomain(BaseModel):
    type: str


class Properties198(BaseModel):
    name: Name34


class SecretRef6(BaseModel):
    properties: Properties198
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class SslEnabled(BaseModel):
    type: str


class StorageMode(BaseModel):
    default: str
    type: str


class StoragePool(BaseModel):
    type: str


class System(BaseModel):
    type: str


class Properties197(BaseModel):
    fsType: FsType11
    gateway: Gateway
    protectionDomain: ProtectionDomain
    readOnly: ReadOnly3
    secretRef: SecretRef6
    sslEnabled: SslEnabled
    storageMode: StorageMode
    storagePool: StoragePool
    system: System
    volumeName: VolumeName


class ScaleIO(BaseModel):
    properties: Properties197
    required: List[str]
    type: str


class Properties200(BaseModel):
    key: Key
    mode: Mode
    path: Path


class Items104(BaseModel):
    properties: Properties200
    required: List[str]
    type: str


class Items103(BaseModel):
    items: Items104
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties199(BaseModel):
    defaultMode: DefaultMode
    items: Items103
    optional: Optional
    secretName: SecretName


class Secret1(BaseModel):
    properties: Properties199
    type: str


class FsType12(BaseModel):
    type: str


class Properties202(BaseModel):
    name: Name34


class SecretRef7(BaseModel):
    properties: Properties202
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class VolumeNamespace(BaseModel):
    type: str


class Properties201(BaseModel):
    fsType: FsType12
    readOnly: ReadOnly3
    secretRef: SecretRef7
    volumeName: VolumeName
    volumeNamespace: VolumeNamespace


class Storageos(BaseModel):
    properties: Properties201
    type: str


class StoragePolicyID(BaseModel):
    type: str


class StoragePolicyName(BaseModel):
    type: str


class VolumePath(BaseModel):
    type: str


class Properties203(BaseModel):
    fsType: FsType12
    storagePolicyID: StoragePolicyID
    storagePolicyName: StoragePolicyName
    volumePath: VolumePath


class VsphereVolume(BaseModel):
    properties: Properties203
    required: List[str]
    type: str


class Properties140(BaseModel):
    awsElasticBlockStore: AwsElasticBlockStore
    azureDisk: AzureDisk
    azureFile: AzureFile
    cephfs: Cephfs
    cinder: Cinder
    configMap: ConfigMap
    csi: Csi
    downwardAPI: DownwardAPI
    emptyDir: EmptyDir
    ephemeral: Ephemeral
    fc: Fc
    flexVolume: FlexVolume
    flocker: Flocker
    gcePersistentDisk: GcePersistentDisk
    gitRepo: GitRepo
    glusterfs: Glusterfs
    hostPath: HostPath
    image: Image1
    iscsi: Iscsi
    nfs: Nfs
    path: Path
    persistentVolumeClaim: PersistentVolumeClaim
    photonPersistentDisk: PhotonPersistentDisk
    portworxVolume: PortworxVolume
    projected: Projected
    quobyte: Quobyte
    rbd: Rbd
    readOnly: ReadOnly3
    scaleIO: ScaleIO
    secret: Secret1
    storageos: Storageos
    vsphereVolume: VsphereVolume


class Items81(BaseModel):
    properties: Properties140
    type: str


class Mounts(BaseModel):
    items: Items81
    type: str


class Options1(BaseModel):
    additionalProperties: AdditionalProperties26
    type: str


class Output(BaseModel):
    type: str


class Name39(BaseModel):
    type: str


class Name40(BaseModel):
    default: str
    type: str


class Properties206(BaseModel):
    key: Key
    name: Name40
    optional: Optional


class ConfigMapKeyRef2(BaseModel):
    properties: Properties206
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties207(BaseModel):
    apiVersion: ApiVersion
    fieldPath: FieldPath


class FieldRef4(BaseModel):
    properties: Properties207
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Divisor4(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties208(BaseModel):
    containerName: ContainerName
    divisor: Divisor4
    resource: Resource1


class ResourceFieldRef4(BaseModel):
    properties: Properties208
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties209(BaseModel):
    key: Key
    name: Name40
    optional: Optional


class SecretKeyRef2(BaseModel):
    properties: Properties209
    required: List[str]
    type: str
    x_kubernetes_map_type: str = Field(..., alias='x-kubernetes-map-type')


class Properties205(BaseModel):
    configMapKeyRef: ConfigMapKeyRef2
    fieldRef: FieldRef4
    resourceFieldRef: ResourceFieldRef4
    secretKeyRef: SecretKeyRef2


class ValueFrom2(BaseModel):
    properties: Properties205
    type: str


class Properties204(BaseModel):
    name: Name39
    value: Value7
    valueFrom: ValueFrom2


class Items105(BaseModel):
    properties: Properties204
    required: List[str]
    type: str


class StructureOptions(BaseModel):
    items: Items105
    type: str


class Properties139(BaseModel):
    enabled: Enabled
    mounts: Mounts
    options: Options1
    output: Output
    structureOptions: StructureOptions


class MonitorExporter(BaseModel):
    properties: Properties139
    type: str


class Create(BaseModel):
    type: str


class MountPoint(BaseModel):
    type: str


class Name42(BaseModel):
    type: str


class Size(BaseModel):
    anyOf: List[AnyOfItem]
    pattern: str
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class StorageClass(BaseModel):
    type: str


class VolumeAccessMode(BaseModel):
    type: str


class Properties210(BaseModel):
    create: Create
    mountPoint: MountPoint
    name: Name42
    size: Size
    storageClass: StorageClass
    volumeAccessMode: VolumeAccessMode


class Pvc(BaseModel):
    properties: Properties210
    type: str


class Items106(BaseModel):
    type: str


class Command7(BaseModel):
    items: Items106
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Properties212(BaseModel):
    command: Command7


class Exec6(BaseModel):
    properties: Properties212
    type: str


class Port16(BaseModel):
    format: str
    type: str


class Properties213(BaseModel):
    port: Port16
    service: Service


class Grpc4(BaseModel):
    properties: Properties213
    required: List[str]
    type: str


class Properties215(BaseModel):
    name: Name42
    value: Value7


class Items107(BaseModel):
    properties: Properties215
    required: List[str]
    type: str


class HttpHeaders6(BaseModel):
    items: Items107
    type: str
    x_kubernetes_list_type: str = Field(..., alias='x-kubernetes-list-type')


class Port17(BaseModel):
    anyOf: List[AnyOfItem]
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties214(BaseModel):
    host: Host
    httpHeaders: HttpHeaders6
    path: Path
    port: Port17
    scheme: Scheme


class HttpGet6(BaseModel):
    properties: Properties214
    required: List[str]
    type: str


class Port18(BaseModel):
    anyOf: List[AnyOfItem]
    x_kubernetes_int_or_string: bool = Field(..., alias='x-kubernetes-int-or-string')


class Properties216(BaseModel):
    host: Host
    port: Port18


class TcpSocket6(BaseModel):
    properties: Properties216
    required: List[str]
    type: str


class Properties211(BaseModel):
    exec: Exec6
    failureThreshold: FailureThreshold
    grpc: Grpc4
    httpGet: HttpGet6
    initialDelaySeconds: InitialDelaySeconds
    periodSeconds: PeriodSeconds
    successThreshold: SuccessThreshold
    tcpSocket: TcpSocket6
    terminationGracePeriodSeconds: TerminationGracePeriodSeconds
    timeoutSeconds: TimeoutSeconds


class ReadinessProbe1(BaseModel):
    properties: Properties211
    type: str


class Replicas(BaseModel):
    format: str
    type: str


class Cpu(BaseModel):
    type: str


class Custom(BaseModel):
    additionalProperties: AdditionalProperties26
    type: str


class Gpu(BaseModel):
    type: str


class Memory(BaseModel):
    type: str


class Properties218(BaseModel):
    cpu: Cpu
    custom: Custom
    gpu: Gpu
    memory: Memory


class Limits2(BaseModel):
    properties: Properties218
    type: str


class Custom1(BaseModel):
    additionalProperties: AdditionalProperties26
    type: str


class Properties219(BaseModel):
    cpu: Cpu
    custom: Custom1
    gpu: Gpu
    memory: Memory


class Requests2(BaseModel):
    properties: Properties219
    type: str


class Properties217(BaseModel):
    limits: Limits2
    requests: Requests2


class Resources2(BaseModel):
    properties: Properties217
    type: str


class Standalone(BaseModel):
    type: str


class Properties220(BaseModel):
    standalone: Standalone


class RunMode(BaseModel):
    properties: Properties220
    type: str


class ServiceName(BaseModel):
    type: str


class Properties3(BaseModel):
    annotations: Annotations1
    autoscaling: Autoscaling
    dynamoNim: DynamoNim
    dynamoTag: DynamoTag
    envFromSecret: EnvFromSecret
    envs: Envs
    externalServices: ExternalServices
    extraPodMetadata: ExtraPodMetadata
    extraPodSpec: ExtraPodSpec
    ingress: Ingress
    labels: Labels2
    livenessProbe: LivenessProbe1
    monitorExporter: MonitorExporter
    pvc: Pvc
    readinessProbe: ReadinessProbe1
    replicas: Replicas
    resources: Resources2
    runMode: RunMode
    serviceName: ServiceName


class Spec2(BaseModel):
    properties: Properties3
    type: str


class LastTransitionTime(BaseModel):
    format: str
    type: str


class Message(BaseModel):
    maxLength: int
    type: str


class ObservedGeneration(BaseModel):
    format: str
    minimum: int
    type: str


class Reason(BaseModel):
    maxLength: int
    minLength: int
    pattern: str
    type: str


class Status1(BaseModel):
    enum: List[str]
    type: str


class Type12(BaseModel):
    maxLength: int
    pattern: str
    type: str


class Properties222(BaseModel):
    lastTransitionTime: LastTransitionTime
    message: Message
    observedGeneration: ObservedGeneration
    reason: Reason
    status: Status1
    type: Type12


class Items108(BaseModel):
    properties: Properties222
    required: List[str]
    type: str


class Conditions(BaseModel):
    items: Items108
    type: str


class PodSelector(BaseModel):
    additionalProperties: AdditionalProperties26
    type: str


class Properties221(BaseModel):
    conditions: Conditions
    podSelector: PodSelector


class Status(BaseModel):
    properties: Properties221
    required: List[str]
    type: str


class Properties2(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata1
    spec: Spec2
    status: Status


class AdditionalProperties(BaseModel):
    properties: Properties2
    type: str


class Services(BaseModel):
    additionalProperties: AdditionalProperties
    type: str


class Properties1(BaseModel):
    dynamoNim: DynamoNim
    services: Services


class Spec1(BaseModel):
    properties: Properties1
    required: List[str]
    type: str


class Status3(BaseModel):
    enum: List[str]
    type: str


class Properties224(BaseModel):
    lastTransitionTime: LastTransitionTime
    message: Message
    observedGeneration: ObservedGeneration
    reason: Reason
    status: Status3
    type: Type12


class Items109(BaseModel):
    properties: Properties224
    required: List[str]
    type: str


class Conditions1(BaseModel):
    items: Items109
    type: str


class State(BaseModel):
    type: str


class Properties223(BaseModel):
    conditions: Conditions1
    state: State


class Status2(BaseModel):
    properties: Properties223
    type: str


class Properties(BaseModel):
    apiVersion: ApiVersion
    kind: Kind
    metadata: Metadata1
    spec: Spec1
    status: Status2


class OpenAPIV3Schema(BaseModel):
    properties: Properties
    type: str


class Schema(BaseModel):
    openAPIV3Schema: OpenAPIV3Schema


class Subresources(BaseModel):
    status: Dict[str, Any]


class Version(BaseModel):
    name: str
    schema_: Schema = Field(..., alias='schema')
    served: bool
    storage: bool
    subresources: Subresources


class Spec(BaseModel):
    group: str
    names: Names
    scope: str
    versions: List[Version]


class Model(BaseModel):
    apiVersion: str
    kind: str
    metadata: Metadata
    spec: Spec
