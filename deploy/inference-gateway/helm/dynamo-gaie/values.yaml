# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for dynamo-gaie.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This is the Dynamo namespace where the dynamo model is deployed
dynamoNamespace: "vllm-agg"

model:
  identifier: "Qwen/Qwen3-0.6B"
  shortName: "qwen"
  criticality: "Critical"

inferencePool:
  port: 8000

httpRoute:
  enabled: true
  gatewayName: "inference-gateway"
  path:
    prefix: "/"
  timeout:
    request: "300s"

extension:
  # default (non-epp-aware) EPP image for the GAIE extension
  image: us-central1-docker.pkg.dev/k8s-staging-images/gateway-api-inference-extension/epp:v0.4.0

# NEW: generic knobs you may want in both modes
imagePullSecrets: []     # e.g. ["docker-imagepullsecret"]
epp:
  imagePullPolicy: IfNotPresent
  # Add env in name/value pairs (works for both modes)
  extraEnv: []           # e.g. [{name: USE_STREAMING, value: "true"}]
  # If you ever want to completely override args, supply a list here.
  # When empty, chart will render sane defaults
  argsOverride: []

# NEW: epp-aware mode toggle + specific settings
eppAware:
  enabled: false
  # Optional: override EPP image when epp-aware=true
  eppImage: docker.io/lambda108/epp-inference-extension-dynamo:1.0.0

  # Sidecar (frontend-router)
  sidecar:
    name: frontend-router
    image: nvcr.io/nvidia/ai-dynamo/vllm-runtime:0.4.1
    imagePullPolicy: IfNotPresent
    command: ["/bin/sh", "-c"]
    args: ["python3 -m dynamo.frontend --http-port 8000 --router-mode kv"]
    env:
      - name: DYNAMO_NAMESPACE
        valueFromDynamoNamespace: true   # special flag; chart will render .Values.dynamoNamespace
      - name: ETCD_ENDPOINTS
        value: "http://dynamo-platform-etcd:2379"
      - name: NATS_SERVER
        value: "nats://dynamo-platform-nats:4222"
    resources:
      requests:
        cpu: "1"
        memory: "2Gi"
    ports:
      - containerPort: 8000
