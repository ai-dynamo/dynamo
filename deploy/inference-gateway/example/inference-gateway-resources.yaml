apiVersion: v1
kind: Service
metadata:
  name: dynamo-deepseek-epp
  namespace: default
spec:
  selector:
    app: dynamo-deepseek-epp
  ports:
    - protocol: TCP
      port: 9002
      targetPort: 9002
      appProtocol: http2
  type: ClusterIP
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-read
rules:
- apiGroups: ["inference.networking.x-k8s.io"]
  resources: ["inferencepools"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["inference.networking.x-k8s.io"]
  resources: ["inferencemodels"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-read-binding
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: ClusterRole
  name: pod-read
---
apiVersion: inference.networking.x-k8s.io/v1alpha2
kind: InferenceModel
metadata:
  name: deep-seek-model
  namespace: default
spec:
  criticality: Critical
  modelName: deepseek-ai/DeepSeek-R1-Distill-Llama-8B
  poolRef:
    group: inference.networking.x-k8s.io
    kind: InferencePool
    name: dynamo-deepseek
---
apiVersion: inference.networking.x-k8s.io/v1alpha2
kind: InferencePool
metadata:
  name: dynamo-deepseek
  namespace: default
spec:
  targetPortNumber: 3000
  selector:
    nvidia.com/dynamo-component-type: Frontend
  extensionRef:
    failureMode: FailClose
    group: ""
    kind: Service
    name: dynamo-deepseek-epp
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: llm-route
spec:
  parentRefs:
  - group: gateway.networking.k8s.io
    kind: Gateway
    name: inference-gateway
  rules:
  - backendRefs:
    - group: inference.networking.x-k8s.io
      kind: InferencePool
      name: dynamo-deepseek
    matches:
    - path:
        type: PathPrefix
        value: /
    timeouts:
      request: 300s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dynamo-deepseek-epp
  namespace: default
  labels:
    app: dynamo-deepseek-epp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dynamo-deepseek-epp
  template:
    metadata:
      labels:
        app: dynamo-deepseek-epp
    spec:
      # Conservatively, this timeout should mirror the longest grace period of the pods within the pool
      terminationGracePeriodSeconds: 130
      containers:
      - name: epp
        image: us-central1-docker.pkg.dev/k8s-staging-images/gateway-api-inference-extension/epp:main
        imagePullPolicy: Always
        args:
        - -poolName
        - "dynamo-deepseek"
        - "-poolNamespace"
        - "default"
        - -v
        - "4"
        - --zap-encoder
        - "json"
        - -grpcPort
        - "9002"
        - -grpcHealthPort
        - "9003"
        ports:
        - containerPort: 9002
        - containerPort: 9003
        - name: metrics
          containerPort: 9090
        livenessProbe:
          grpc:
            port: 9003
            service: inference-extension
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          grpc:
            port: 9003
            service: inference-extension
          initialDelaySeconds: 5
          periodSeconds: 10
