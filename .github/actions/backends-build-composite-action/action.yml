name: 'Dynamo Backend Validation'
description: 'Build and test container for a Dynamo backend'
inputs:
  framework:
    description: 'Framework to validate'
    required: true
    default: 'vllm'
  pytest_marks:
    description: 'Pytest marks'
    required: true
    default: 'e2e and vllm and gpu_1 and not slow'
  target:
    description: 'Target to build'
    required: false
    default: 'runtime'    

runs:
  using: "composite"
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to NGC
      if: github.event.pull_request.head.repo.full_name == github.repository || github.event_name == 'push'
      shell: bash
      run: |
        echo "${{ secrets.NGC_CI_ACCESS_TOKEN }}" | docker login nvcr.io -u '$oauthtoken' --password-stdin
    - name: Cleanup
      if: always()
      shell: bash
      run: |
        docker system prune -af
    - name: Build image
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        SCCACHE_S3_BUCKET:  ${{ secrets.SCCACHE_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        ./container/build.sh --tag ${{ inputs.framework }}:latest \
          --target ${{ inputs.target }} \
          --framework ${{ inputs.framework }} \
          --use-sccache \
          --sccache-bucket "$SCCACHE_S3_BUCKET" \
          --sccache-region "$AWS_DEFAULT_REGION"
    - name: Run pytest
      shell: bash
      env:
        CONTAINER_ID: test_${{ github.run_id }}_${{ github.run_attempt }}_${{ github.job }}_${{ inputs.framework }}
        PYTEST_XML_FILE: pytest_test_report.xml
      run: |
        docker run --runtime=nvidia --rm --gpus all -w /workspace \
          --network host \
          --name ${{ env.CONTAINER_ID }}_pytest \
          ${{ inputs.framework }}:latest \
          bash -c "pytest -xsv --basetemp=/tmp --junitxml=${{ env.PYTEST_XML_FILE }} -m \"${{ inputs.pytest_marks }}\""