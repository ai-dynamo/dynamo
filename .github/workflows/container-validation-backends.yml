# SPDX-FileCopyrightText: Copyright (c) 2024-2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

name: NVIDIA Dynamo Backends Github Validation

on:
  push:
    branches:
      - main
      - "pull-request/[0-9]+"

jobs:
  build-test:
    runs-on: gpu-l40-amd64
    strategy:
      matrix:
        framework: [vllm]
        include:
          - framework: vllm
            target: runtime
            pytest_marks: "e2e and vllm and gpu_1 and not slow"
    # Do not cancel main branch runs
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.framework }}-build-test-${{ github.ref_name || github.run_id }}
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

    name: Build and Test - ${{ matrix.framework }}
    env:
      CONTAINER_ID: test_${{ github.run_id }}_${{ github.run_attempt }}_${{ github.job }}_${{ matrix.framework }}
      PYTEST_XML_FILE: pytest_test_report.xml
      FRAMEWORK: ${{ matrix.framework }}
      TARGET: ${{ matrix.target }}
      PYTEST_MARKS: ${{ matrix.pytest_marks }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to NGC
        if: github.event.pull_request.head.repo.full_name == github.repository || github.event_name == 'push'
        run: |
          echo "${{ secrets.NGC_CI_ACCESS_TOKEN }}" | docker login nvcr.io -u '$oauthtoken' --password-stdin
      - name: Cleanup
        if: always()
        run: |
          docker system prune -af
      - name: Debug
        run: |
          nvidia-smi
      - name: Test
        run: |
          curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \
            && curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \
            sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \
            sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
          sudo apt-get update
          sudo apt-get install -y nvidia-container-toolkit
          sudo nvidia-ctk runtime configure --runtime=docker
          sudo systemctl restart docker
          docker run --runtime=nvidia --rm --gpus all nvidia/cuda nvidia-smi
      # - name: Build image
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.CI_TOKEN }}
      #     AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      #     SCCACHE_S3_BUCKET:  ${{ secrets.SCCACHE_S3_BUCKET }}
      #   run: |
      #     ./container/build.sh --tag ${{ matrix.framework }}:latest \
      #       --target ${{ matrix.target }} \
      #       --framework ${{ matrix.framework }} \
      #       --use-sccache \
      #       --sccache-bucket "$SCCACHE_S3_BUCKET" \
      #       --sccache-region "$AWS_DEFAULT_REGION"
      # - name: Run pytest
      #   run: |
      #     docker run --runtime=nvidia --rm --gpus all -w /workspace \
      #       --name ${{ env.CONTAINER_ID }}_pytest \
      #       ${{ matrix.framework }}:latest \
      #       bash -c "pytest -xsv --basetemp=/tmp --junitxml=${{ env.PYTEST_XML_FILE }} -m \"${{ env.PYTEST_MARKS }}\""
