# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
#
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: network-fault-injector
  namespace: fault-injection-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: network-fault-injector
rules:
- apiGroups: [""]
  resources: ["nodes", "pods", "services"]
  verbs: ["get", "list"]
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["get", "list", "create", "delete", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: network-fault-injector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: network-fault-injector
subjects:
- kind: ServiceAccount
  name: network-fault-injector
  namespace: fault-injection-system

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: network-fault-injector
  namespace: fault-injection-system
  labels:
    app: network-fault-injector
spec:
  selector:
    matchLabels:
      app: network-fault-injector
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: network-fault-injector
    spec:
      serviceAccountName: network-fault-injector
      hostNetwork: true
      hostPID: true
      # Tolerate GPU node taints so DaemonSet runs on all nodes
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute
      - operator: Exists
        effect: NoSchedule
      
      containers:
      - name: network-fault-injector
        image: nvcr.io/nvidian/dynamo-dev/network-fault-injector:latest
        imagePullPolicy: IfNotPresent
        
        ports:
        - name: http
          containerPort: 8082
          protocol: TCP
        
        securityContext:
          privileged: true
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
        
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: PYTHONUNBUFFERED
          value: "1"
        
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 30
          periodSeconds: 30
        
        readinessProbe:
          httpGet:
            path: /health
            port: 8082
          initialDelaySeconds: 10
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: network-fault-injector
  namespace: fault-injection-system
  labels:
    app: network-fault-injector
spec:
  # Headless service for direct pod access
  clusterIP: None
  ports:
  - name: http
    port: 8082
    targetPort: 8082
    protocol: TCP
  selector:
    app: network-fault-injector

